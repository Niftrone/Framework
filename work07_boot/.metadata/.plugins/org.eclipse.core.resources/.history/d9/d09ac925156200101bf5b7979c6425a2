package com.service.spring.controller;

import java.net.http.HttpRequest;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.service.spring.domain.Book;
import com.service.spring.service.BookService;

import jakarta.servlet.http.HttpSession;

@Controller
public class BookController {
	
	@Autowired
	private BookService bookService;
	
	@GetMapping("bookList")
	public ModelAndView getBooks() throws Exception{
		List<Book> list=bookService.getBooks();
		
		return new ModelAndView("book/bookList","list",list);
	}
	
	@PostMapping("bookRegister")
	public ModelAndView register(String isbn1, String isbn2, String isbn3, Book book, HttpSession session){
		
		String isbn = isbn1 + "-" +isbn2 + "-" + isbn3;
		book.setIsbn(isbn);
		
		System.out.println("register BookVO before:: " + book);//?
		String msg = "책 추가 실패";
		String path = "redirect:/Error.jsp";
		try {
			int a = bookService.insertBook(book);
			if(a == 1) {
				msg = "책 추가 성공";
				path = "book/bookList";
				System.out.println("삽입 성공");
				List<Book> list = bookService.getBooks();
			    session.setAttribute("list", list);
			}
			session.setAttribute("msg", msg);
			session.setAttribute("path", path);
		}catch(Exception e) {
			System.out.println(e);
		}
		
		return new ModelAndView(path);
	}
	
	@GetMapping("bookSearch")
    public ModelAndView search(String searchField, String searchText) throws Exception{ 
		
		List<Book> list = null;
		String path = "find_fail";
		String msg = "검색 실패";
		try {
			//switch 문과 case
			switch (searchField) {
				case "LIST": 
					list = bookService.getBooks();
					break;
				case "TITLE":
					list = bookService.searchByTitle(searchText);
					break;
				case "PUBLISHER":
					list = bookService.searchByPublisher(searchText);
					break;
				case "PRICE":
					list = bookService.searchByPrice(Integer.parseInt(searchText));
					break;
			}
			if(list != null) {
				path = "book/bookList.jsp";
				msg = "도서 검색 완료";
			}
			
			
		}catch(Exception e) {
			System.out.println(e);
		}
		return new ModelAndView(path, "list", list);
	}
	@GetMapping("bookView")
    public ModelAndView bookview(String isbn){
		Book book = null;
		
		try {
			book = bookService.searchByIsbn(isbn);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return new ModelAndView("book/bookView","book", book);
	}	
	@GetMapping("bookAjax")
	public ModelAndView bookAjax(String isbn) {
		Book book = null;
		System.out.println("bookAjax");
		try {
			book = bookService.getIsbn(isbn);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return new ModelAndView("resultView","result", book);
	}

}//





