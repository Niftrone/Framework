package com.service.spring.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.graphql.GraphQlProperties.Http;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import com.service.spring.domain.Board;
import com.service.spring.domain.Member;
import com.service.spring.service.BoardService;
import com.service.spring.service.MemberService;

import jakarta.servlet.http.HttpSession;

//Presentation Layer Component// 결과로 데이터를 담고있는 jsp page를 리턴한다
@Controller 
public class BoardController {

	@Autowired
	private BoardService boardService;

	@PostMapping("/write")
	public String write(Board bvo,Model model, HttpSession session) {
		Member mvo = (Member) session.getAttribute("mvo");
		String path = "board/show_content";
		if(mvo == null) return "redirect:index.jsp";
		try {
			bvo.setMember(mvo);
			model.addAttribute("bvo", bvo);
			boardService.write(bvo);
		}catch(Exception e){
			System.out.println(e);
			return "Error";
		}
		return path;
	}
	
	@GetMapping("/list")
	public String getBoardList(Model model) {
		try {
			List<Board> list = boardService.getBoardList();
			model.addAttribute("boardList", list);
		}catch(Exception e){
			model.addAttribute("message", "게시글 검색중 에러 발생");
		}
		
		return "board/list";
	}
	
	@GetMapping("/showContent")
	public String showContent(Integer no, Model model, HttpSession session) {
		Member rvo = (Member) session.getAttribute("mvo");
		try {
			boardService.updateCount(no);
			Board bvo = boardService.showContent(no);
			model.addAttribute("bvo", bvo);
		}catch(Exception e){
			System.out.println(e);
		}

		return "board/show_content";
	}
	
	@GetMapping("/delete")
	public String doDelte(int no, Model model) {
		try {
			boardService.deleteBoard(no);
			return "redirect:/list";
		}catch(Exception e) {
			model.addAttribute("message", "게시판 삭제 중 에러 발생");
			return "Error";
		}
	}
	
	@GetMapping("/updateForm")
	public String updateVeiw(int no, Model model) {
		try {
			//service의 showContent(no)로 호출...bvo 하나를 반환받고
			Board bvo = boardService.showContent(no);
			//bvo를 바인딩
			model.addAttribute("bvo", bvo);
			//결과페이지를 update... 여기서 하나의 bvo내용을 에 띄운채로 수정을 진행
			return "board/update";
		}catch(Exception e) {
			model.addAttribute("message", "업데이트 화면 이동중 에러 발생");
			return "Error";
		}
	}
	
	@PostMapping("/updateBoard")
	public String doUpdate(Board pvo, Model model) {
		try {
			//서비스의 업데이트함수 호출
			boardService.updateBoard(pvo);
			//서비스의 showcontent함수 호출
			Board bvo = boardService.showContent(pvo.getNo());
			model.addAttribute("bvo", bvo);
			//결과페이지는 show_content.jsp
			return "board/show_content";
		}catch(Exception e) {
			model.addAttribute("message", "업데이트 중 에러 발생");
			return "Error";
		}
	}
	
}
