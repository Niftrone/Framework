package com.service.spring.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.service.spring.domain.Company;
import com.service.spring.domain.Phone;
import com.service.spring.domain.UserInfo;
import com.service.spring.service.PhoneService;

import jakarta.servlet.http.HttpSession;

//presentation layer
//결과페이즈를 응답하는 컨트롤러...SSR...jsp사용...검색용이...SEO search engine optimizer
@Controller
public class PhoneController {

	@Autowired
	private PhoneService service;

	// 인트로 페이지로부터 요청
	@GetMapping("/") // http/localhost:9000/
	public String home() {
		return "redirect:/index.jsp";
	}

	@GetMapping("regPhone")
	public String getRegPhone(Model model) {
		model.addAttribute("title", "핸드폰 관리 - 핸드폰 등록");
		return "PhoneReg";
	}

	@PostMapping("/savePhone")
	public String doRegPhone(Phone phone, Model model) {
		try {
			service.insert(phone);
			model.addAttribute("title", "핸드폰 관리 - 핸드폰 저장 성공");
			return "Result";
		} catch (Exception e) {
			model.addAttribute("title", "핸드폰 관리 - 핸드폰 저장 에러");
			return "Error";
		}
	}

	@GetMapping("searchPhone")
	public String doList(Model model) {
		try {
			List<Phone> phones = service.select();
			model.addAttribute("phones", phones);
			model.addAttribute("title", "핸드폰 관리 - 핸드폰 리스트 출력 완료");
			return "PhoneList";
		} catch (Exception e) {
			System.out.println(e);
			model.addAttribute("title", "핸드폰 관리 - 핸드폰 리스트 출력 에러");
			model.addAttribute("message", "에러 내용 - 핸드폰 목록 조회중 에러");
			return "Error";
		}
	}

	@GetMapping("detail")
	public String doDetail(Phone phone, Model model) {
		try {
			Phone selected = service.select(phone);
			model.addAttribute("phone", selected);
			model.addAttribute("title", "핸드폰 관리 - 상세 조회 완료");
			return "PhoneView";
		} catch (Exception e) {
			System.out.println(e);
			model.addAttribute("title", "핸드폰 관리 - 상세 조회 실패");
			return "Error";
		}
	}

	@GetMapping("login")
	public String getLogin() {
		return "Login";
	}

	@PostMapping("login")
	public String doLogin(UserInfo user, Model model, HttpSession session) {
		try {
			UserInfo selected = service.select(user);
			if (selected != null) {
				session.setAttribute("loginUser", selected);
				return "redirect:/searchPhone";
			} else {
				return "Login";
			}

		} catch (Exception e) {
			System.out.println("로그인 실패: " + e.getMessage());
			model.addAttribute("title", "유저 관리 - 로그인 실패");
			return "Error";
		}

	}

	@PostMapping("deleteAjax")
	@ResponseBody
	public String deleteAjax(@RequestParam List<String> nums, Model model) {
		try {
			service.delete(nums);
			return "";
		} catch (Exception e) {
			
		}
	}
}
